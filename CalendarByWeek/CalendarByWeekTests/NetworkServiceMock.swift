import Foundation
import Combine
@testable import CalendarByWeek

internal final class NetworkServiceMock: NetworkServiceType {
    
    private let source: [String: String] = [
        "2022-04-03T00:00:00+08:00": """
        {"available":[{"start":"2022-04-09T14:00:00Z","end":"2022-04-09T15:00:00Z"}],"booked":[{"start":"2022-04-09T13:30:00Z","end":"2022-04-09T14:00:00Z"}]}
        """,
        "2022-04-10T00:00:00+08:00": """
        {"available":[{"start":"2022-04-10T01:00:00Z","end":"2022-04-10T01:30:00Z"},{"start":"2022-04-10T02:00:00Z","end":"2022-04-10T03:00:00Z"},{"start":"2022-04-10T03:30:00Z","end":"2022-04-10T04:30:00Z"},{"start":"2022-04-10T05:30:00Z","end":"2022-04-10T07:00:00Z"},{"start":"2022-04-10T07:30:00Z","end":"2022-04-10T08:00:00Z"},{"start":"2022-04-10T08:30:00Z","end":"2022-04-10T12:00:00Z"},{"start":"2022-04-10T12:30:00Z","end":"2022-04-10T14:00:00Z"},{"start":"2022-04-10T19:00:00Z","end":"2022-04-10T21:00:00Z"},{"start":"2022-04-11T19:00:00Z","end":"2022-04-11T21:00:00Z"},{"start":"2022-04-12T01:00:00Z","end":"2022-04-12T05:30:00Z"},{"start":"2022-04-12T06:00:00Z","end":"2022-04-12T07:00:00Z"},{"start":"2022-04-12T07:30:00Z","end":"2022-04-12T11:30:00Z"},{"start":"2022-04-12T12:30:00Z","end":"2022-04-12T13:00:00Z"},{"start":"2022-04-12T19:00:00Z","end":"2022-04-12T21:00:00Z"},{"start":"2022-04-13T19:00:00Z","end":"2022-04-13T21:00:00Z"},{"start":"2022-04-14T01:00:00Z","end":"2022-04-14T02:00:00Z"},{"start":"2022-04-14T02:30:00Z","end":"2022-04-14T09:00:00Z"},{"start":"2022-04-14T10:00:00Z","end":"2022-04-14T11:30:00Z"},{"start":"2022-04-14T12:30:00Z","end":"2022-04-14T13:00:00Z"},{"start":"2022-04-14T19:00:00Z","end":"2022-04-14T21:00:00Z"},{"start":"2022-04-15T01:00:00Z","end":"2022-04-15T04:00:00Z"},{"start":"2022-04-16T00:00:00Z","end":"2022-04-16T01:30:00Z"},{"start":"2022-04-16T11:00:00Z","end":"2022-04-16T12:00:00Z"},{"start":"2022-04-16T13:00:00Z","end":"2022-04-16T15:00:00Z"}],"booked":[{"start":"2022-04-10T00:00:00Z","end":"2022-04-10T00:30:00Z"},{"start":"2022-04-10T01:30:00Z","end":"2022-04-10T02:00:00Z"},{"start":"2022-04-10T03:00:00Z","end":"2022-04-10T03:30:00Z"},{"start":"2022-04-10T04:30:00Z","end":"2022-04-10T05:30:00Z"},{"start":"2022-04-10T07:00:00Z","end":"2022-04-10T07:30:00Z"},{"start":"2022-04-10T08:00:00Z","end":"2022-04-10T08:30:00Z"},{"start":"2022-04-10T12:00:00Z","end":"2022-04-10T12:30:00Z"},{"start":"2022-04-12T05:30:00Z","end":"2022-04-12T06:00:00Z"},{"start":"2022-04-12T07:00:00Z","end":"2022-04-12T07:30:00Z"},{"start":"2022-04-12T11:30:00Z","end":"2022-04-12T12:30:00Z"},{"start":"2022-04-12T13:00:00Z","end":"2022-04-12T14:00:00Z"},{"start":"2022-04-14T02:00:00Z","end":"2022-04-14T02:30:00Z"},{"start":"2022-04-14T09:00:00Z","end":"2022-04-14T10:00:00Z"},{"start":"2022-04-14T11:30:00Z","end":"2022-04-14T12:30:00Z"},{"start":"2022-04-14T13:00:00Z","end":"2022-04-14T14:00:00Z"},{"start":"2022-04-16T12:00:00Z","end":"2022-04-16T13:00:00Z"}]}
        """
    ]
    
    func fetch(queryValue: String) -> AnyPublisher<Data, URLError> {
        let data = source[queryValue]?.data(using: .utf8) ?? .init()
        return Just(data)
            .catch { _ in
                Empty<Data, URLError>().eraseToAnyPublisher()
            }
            .eraseToAnyPublisher()
    }
}
